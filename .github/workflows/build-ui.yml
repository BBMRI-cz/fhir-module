name: Build and Push UI Container

on:
  schedule:
    - cron: "0 10 * * *" # every day at 10am
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build-ui:
    name: Build UI Container
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ui/fhir-place/package-lock.json

      - name: Install dependencies
        working-directory: ui/fhir-place
        run: npm ci

      - name: Initialize database
        working-directory: ui/fhir-place
        run: npm run db:init

      - name: Run tests
        working-directory: ui/fhir-place
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/fhir-ui
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push UI container
        uses: docker/build-push-action@v5
        with:
          context: ui/fhir-place
          file: ui/fhir-place/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
