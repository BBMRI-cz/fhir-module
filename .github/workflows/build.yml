name: CI build

on:
  schedule:
    - cron: '0 10 * * *' # every day at 10am
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  py-lint:
    name: Lint
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pylint
        run: pylint --recursive=y . || true

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create log directories
        run: |
          sudo mkdir -p /var/log/fhir-module
          sudo chmod 777 /var/log/fhir-module

      - name: Run unit tests
        run: make test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        with:
          flags: unit

  integration-tests:
    needs: unit-tests
    name: Integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up Python
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Create log directories
        run: |
          sudo mkdir -p /var/log/fhir-module
          sudo chmod 777 /var/log/fhir-module

      - name: Run integration tests
        run: make validate

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        with:
          flags: integration

  build-image:
    name: Docker image build
    needs: [ integration-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v2

      - name: Build image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v4
        with:
          context: .
          tags: ghcr.io/bbmri-cz/fhir-module:latest
          outputs: type=docker,dest=/tmp/fhir-module.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload FHIR-Module Image
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4
        with:
          name: fhir-module-image
          path: /tmp/fhir-module.tar

  system-test:
    name: System test
    needs: [ build-image ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Download artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: fhir-module-image
          path: /tmp

      - name: Load FHIR-Module Image
        run: docker load --input /tmp/fhir-module.tar

      - name: Create docker network
        run: docker network create system-test

      - name: Create .env file
        run: touch .env

      - name: Run sandbox in dev env
        run: docker compose --profile dev up -d

      - name: Wait for Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:8080/health

      - name: Wait for MIABIS Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:5432/health

      - name: Docker Logs
        run: docker logs test-blaze

      - name: Docker Logs
        run: docker logs miabis-blaze

      - name: Docker Logs
        run: sleep 20 && docker logs fhir-module

      - name: Verify upload succeeded for blaze
        run: .github/scripts/check-patient-exists.sh http://localhost:8080/fhir

      - name: Verify upload succeeded for MIABIS blaze
        run: .github/scripts/check-patient-exists.sh http://localhost:5432/fhir

  system-test-csv:
    name: System test csv files
    needs: [ system-test ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Download artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: fhir-module-image
          path: /tmp

      - name: Load FHIR-Module Image
        run: docker load --input /tmp/fhir-module.tar

      - name: Create docker network
        run: docker network create system-test

      - name: Create .env file
        run: touch .env

      - name: Run sandbox in dev env (use compose.override.yaml  to work with csv files)
        run: docker compose -f compose.yaml -f .github/comp_override/compose.override.yaml --profile dev up -d

      - name: Wait for Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:8080/health

      - name: Wait for MIABIS Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:5432/health

      - name: Docker Logs
        run: docker logs test-blaze

      - name: Docker Logs
        run: docker logs miabis-blaze

      - name: Docker Logs
        run: sleep 20 && docker logs fhir-module

      - name: Verify upload succeeded
        run: .github/scripts/check-patient-exists.sh http://localhost:8080/fhir

      - name: Verify upload succeeded for MIABIS blaze
        run: .github/scripts/check-patient-exists.sh http://localhost:5432/fhir

  system-test-json:
    name: System test json files
    needs: [ system-test-csv ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Download artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: fhir-module-image
          path: /tmp

      - name: Load FHIR-Module Image
        run: docker load --input /tmp/fhir-module.tar

      - name: Create docker network
        run: docker network create system-test

      - name: Create .env file
        run: touch .env

      - name: Run sandbox in dev env (use compose.override.yaml  to work with csv files)
        run: docker compose -f compose.yaml -f .github/comp_override/compose.override2.yaml --profile dev up -d

      - name: Wait for Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:8080/health

      - name: Wait for MIABIS Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:5432/health

      - name: Docker Logs
        run: docker logs test-blaze

      - name: Docker Logs
        run: docker logs miabis-blaze

      - name: Docker Logs
        run: sleep 20 && docker logs fhir-module

      - name: Verify upload succeeded
        run: .github/scripts/check-patient-exists.sh http://localhost:8080/fhir

      - name: Verify upload succeeded for MIABIS blaze
        run: .github/scripts/check-patient-exists.sh http://localhost:5432/fhir

  build-push-image:
    name: Publish docker image
    needs: [ system-test-json ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/fhir-module
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
