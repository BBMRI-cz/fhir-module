name: CI build

on:
  schedule:
    - cron: '0 10 * * *' # every day at 10am
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit_tests
        run: pytest test/unit --cov test/unit --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  integration-tests:
    needs: unit-tests
    name: Integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Blaze
        run: docker run --name blaze -d -e JAVA_TOOL_OPTIONS=-Xmx2g -p 8080:8080 -p 8081:8081 -v blaze-data:/app/data samply/blaze:latest

      - name: Wait for Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:8080/health

      - name: Docker Logs
        run: docker logs blaze

      - name: Run unit_tests
        run: pytest test/integration

  build-image:
    name: Docker image build
    needs: [ integration-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: fhir-module:latest
          outputs: type=docker,dest=/tmp/fhir-module.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload FHIR-Module Image
        uses: actions/upload-artifact@v3
        with:
          name: fhir-module-image
          path: /tmp/fhir-module.tar

  system-test:
    name: System test
    needs: [ build-image ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: fhir-module-image
          path: /tmp

      - name: Load FHIR-Module Image
        run: docker load --input /tmp/fhir-module.tar

      - name: Create docker network
        run: docker network create system-test

      - name: Run Blaze
        run: docker run --network=system-test --name blaze -d -e JAVA_TOOL_OPTIONS=-Xmx2g -p 8080:8080 -p 8081:8081 -v blaze-data:/app/data samply/blaze:latest

      - name: Wait for Blaze
        run: .github/scripts/wait-for-url.sh  http://localhost:8080/health

      - name: Docker Logs
        run: docker logs blaze

      - name: Run FHIR-Module
        run: docker run -d --network=system-test --name fhir-module -e BLAZE_URL="http://blaze:8080/fhir" -e DIR_PATH="/opt/records" --mount type=bind,source="$(pwd)"/test/xml_data,target=/opt/records fhir-module:latest

      - name: Docker Logs
        run: sleep 2 && docker logs fhir-module

      - name: Verify upload succeeded
        run: .github/scripts/check-patient-exists.sh

  build-push-image:
    name: Publish docker image
    needs: [ system-test ]
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/fhir-module
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max